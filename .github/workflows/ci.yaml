# see https://docs.github.com/en/actions/guides/publishing-docker-images#publishing-images-to-github-packages
name: Create and Run Docker Image for Greenhouse Telegram Bot

on:
  push:
    paths:
      - 'src/**'
      - 'test/**'

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}/greenhouse.telegram.bot

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore ./test/Veggerby.Units.Tests/Veggerby.Units.Tests.csproj
      - name: Build
        run: dotnet build --configuration Release --no-restore ./test/Veggerby.Units.Tests/Veggerby.Units.Tests.csproj
      - name: Test
        run: dotnet test --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}" ./test/Veggerby.Units.Tests/Veggerby.Units.Tests.csproj
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}